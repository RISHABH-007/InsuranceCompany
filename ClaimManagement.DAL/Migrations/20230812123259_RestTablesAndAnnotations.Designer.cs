// <auto-generated />
using System;
using ClaimManagement.DAL.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClaimManagement.DAL.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230812123259_RestTablesAndAnnotations")]
    partial class RestTablesAndAnnotations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClaimManagement.DAL.Entity.ClaimDetails", b =>
                {
                    b.Property<string>("ClaimId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("AmtApprovedBySurveyor")
                        .HasColumnType("int");

                    b.Property<bool>("ClaimStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateOfAccident")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstimatedLoss")
                        .HasColumnType("int");

                    b.Property<bool>("InsuranceCompanyApproval")
                        .HasColumnType("bit");

                    b.Property<string>("PolicyNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(7)");

                    b.Property<int>("SurveyorFees")
                        .HasColumnType("int");

                    b.Property<int>("SurveyorId")
                        .HasColumnType("int");

                    b.Property<bool>("WithdrawClaim")
                        .HasColumnType("bit");

                    b.HasKey("ClaimId");

                    b.HasIndex("PolicyNo");

                    b.HasIndex("SurveyorId");

                    b.ToTable("ClaimDetails");
                });

            modelBuilder.Entity("ClaimManagement.DAL.Entity.Fees", b =>
                {
                    b.Property<int>("FeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeeId"));

                    b.Property<int>("EstimateEndLimit")
                        .HasColumnType("int");

                    b.Property<int>("EstimateStartLimit")
                        .HasColumnType("int");

                    b.Property<int>("fees")
                        .HasColumnType("int");

                    b.HasKey("FeeId");

                    b.ToTable("Fees");
                });

            modelBuilder.Entity("ClaimManagement.DAL.Entity.PaymentOfClaims", b =>
                {
                    b.Property<int>("reportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("reportId"));

                    b.Property<string>("month")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("payment")
                        .HasColumnType("int");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("reportId");

                    b.ToTable("PaymentOfClaims");
                });

            modelBuilder.Entity("ClaimManagement.DAL.Entity.PendingStatusReport", b =>
                {
                    b.Property<int>("reportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("reportId"));

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.Property<string>("month")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("reportId");

                    b.ToTable("PendingStatusReport");
                });

            modelBuilder.Entity("ClaimManagement.DAL.Entity.Policy", b =>
                {
                    b.Property<string>("PolicyNo")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<DateTime>("DateOfInsurance")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuredFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuredLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("VehicleNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PolicyNo");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("ClaimManagement.DAL.Entity.SurveyReport", b =>
                {
                    b.Property<string>("ClaimId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DepreciationCost")
                        .HasColumnType("int");

                    b.Property<int>("LabourCharges")
                        .HasColumnType("int");

                    b.Property<int>("PartsCost")
                        .HasColumnType("int");

                    b.Property<int>("PolicyClass")
                        .HasColumnType("int");

                    b.Property<string>("PolicyNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalAmount")
                        .HasColumnType("int");

                    b.HasKey("ClaimId");

                    b.ToTable("SurveyReport");
                });

            modelBuilder.Entity("ClaimManagement.DAL.Entity.Surveyor", b =>
                {
                    b.Property<int>("SurveyorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SurveyorId"));

                    b.Property<int>("EstimateLimit")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SurveyorId");

                    b.ToTable("Surveyors");
                });

            modelBuilder.Entity("ClaimManagement.DAL.Entity.ClaimDetails", b =>
                {
                    b.HasOne("ClaimManagement.DAL.Entity.Policy", "Policy")
                        .WithMany()
                        .HasForeignKey("PolicyNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClaimManagement.DAL.Entity.Surveyor", "Surveyor")
                        .WithMany()
                        .HasForeignKey("SurveyorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Policy");

                    b.Navigation("Surveyor");
                });
#pragma warning restore 612, 618
        }
    }
}
